<?php

namespace ContainerDhi89Mo;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRecordSaveHandlerRunnerService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Data\Service\Record\RecordSaveHandlers\RecordSaveHandlerRunner' shared autowired service.
     *
     * @return \App\Data\Service\Record\RecordSaveHandlers\RecordSaveHandlerRunner
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordSaveHandlerRunnerInterface.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordSaveHandlerRunner.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'ModuleSaveHandlerTrait.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordFieldSaveHandlerTrait.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordFieldSaveHandlerRegistry.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordFieldTypeSaveHandlerRegistry.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordSaveHandlerTrait.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Record'.\DIRECTORY_SEPARATOR.'RecordSaveHandlers'.\DIRECTORY_SEPARATOR.'RecordSaveHandlerRegistry.php';

        return $container->privates['App\\Data\\Service\\Record\\RecordSaveHandlers\\RecordSaveHandlerRunner'] = new \App\Data\Service\Record\RecordSaveHandlers\RecordSaveHandlerRunner(new \App\Data\Service\Record\RecordSaveHandlers\RecordFieldSaveHandlerRegistry(new RewindableGenerator(fn () => new \EmptyIterator(), 0)), new \App\Data\Service\Record\RecordSaveHandlers\RecordFieldTypeSaveHandlerRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Module\\Service\\Fields\\LineItems\\SaveHandlers\\LineItemsSaveHandler'] ?? $container->load('getLineItemsSaveHandlerService'));
        }, 1)), new \App\Data\Service\Record\RecordSaveHandlers\RecordSaveHandlerRegistry(new RewindableGenerator(fn () => new \EmptyIterator(), 0)), ($container->privates['App\\FieldDefinitions\\LegacyHandler\\FieldDefinitionsHandler'] ?? $container->load('getFieldDefinitionsHandlerService')));
    }
}
