<?php

namespace ContainerDhi89Mo;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRecordProcessorService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Data\DataPersister\RecordProcessor' shared autowired service.
     *
     * @return \App\Data\DataPersister\RecordProcessor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'State'.\DIRECTORY_SEPARATOR.'ProcessorInterface.php';
        include_once \dirname(__DIR__, 3).''.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'backend'.\DIRECTORY_SEPARATOR.'Data'.\DIRECTORY_SEPARATOR.'DataPersister'.\DIRECTORY_SEPARATOR.'RecordProcessor.php';

        return $container->privates['App\\Data\\DataPersister\\RecordProcessor'] = new \App\Data\DataPersister\RecordProcessor(($container->privates['App\\Data\\LegacyHandler\\RecordHandler'] ?? $container->load('getRecordHandlerService')), ($container->privates['App\\Data\\Service\\Record\\ApiRecordMappers\\ApiRecordMapperRunner'] ?? $container->load('getApiRecordMapperRunnerService')));
    }
}
